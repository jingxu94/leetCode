name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        if (Test-Path -Path '.\requirements.txt' -PathType Leaf) {pip install -r requirements.txt}

    - name: Generate coverage report
      run: |
        coverage run --source pysolutions --parallel-mode -m unittest
        coverage combine
        coverage xml -i
      env:
        COVERAGE_RUN: True

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
            file: ./coverage.xml
